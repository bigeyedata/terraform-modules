name: test and publish
permissions:
  contents: write
  issues: write
  pull-requests: write
on:
  push:
    branches: [main]
  pull_request:
    paths:
      - modules/**/*
jobs:
  directories:
    name: List directories
    runs-on: ubuntu-latest
    outputs:
      dir: ${{ steps.setdirs.outputs.dir }}
    steps:
      - uses: actions/checkout@v4
      - id: setdirs
        run: echo "dir=$(ls -d modules/* | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  validate:
    name: TF Check
    runs-on: ubuntu-latest
    needs: [directories]
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.directories.outputs.dir) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get git status
      run: git status
    
    - name: Setup terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.7"

    - name: Terraform init
      run: terraform -chdir=${{ matrix.directory }} init

    - name: Terraform validate
      run: terraform -chdir=${{ matrix.directory }} validate

    - name: Terraform lint check
      run: terraform -chdir=${{ matrix.directory }} fmt -check

  publish:
    name: Publish
    needs: [validate]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: set up branch
        run: |
          git branch "release-from-${{ github.sha }}" "${{ github.sha }}"
          git checkout "release-from-${{ github.sha }}"
      - name: build changelog
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          skip-version-file: true
          git-branch: "release-from-${{ github.sha }}"
          create-summary: true
          skip-git-pull: true
      - name: inspect git status
        run: |
          git status
          git diff | cat
          git diff HEAD~1 | cat
      - name: create PR with release
        if: ${{ success() && steps.changelog.outputs.skipped == 'false' }}
        id: create-pr
        run: gh pr create --base main --head release-from-${{ github.sha }} --title "Add release notes for ${{ steps.changelog.outputs.tag }}" --body "Created by action ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: merge PR with release info
        if: ${{ success() && steps.changelog.outputs.skipped == 'false' }}
        id: merge-pr
        run: gh pr merge "release-from-${{ github.sha }}" --admin --rebase --subject "Merge release notes for ${{ steps.changelog.outputs.tag }}" --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: create release with last commit
        if: ${{ success() && steps.changelog.outputs.skipped == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.changelog.outputs.tag }}
          name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
      - name: notify slack
        if: ${{ success() && steps.changelog.outputs.skipped == 'false' }}
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        with:
          channel-id: ${{ secrets.SRE_SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":shipitparrot: terraform-modules successfully published version ${{ steps.changelog.outputs.tag }}. [<${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.changelog.outputs.tag }}|GH Action>]"
                  }
                }
              ]
            }
      - name: failure - notify
        if: ${{ failure() && steps.changelog.outputs.skipped == 'false' }}
        uses: slackapi/slack-github-action@v1.23.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
        with:
          channel-id: ${{ secrets.SRE_SLACK_CHANNEL_ID }}
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":sadparrot: terraform-modules publish version ${{ steps.changelog.outputs.tag }} failed. [<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}| GH Action>]"
                  }
                }
              ]
            }
      - name: failure - Delete remote branch if exists
        if: ${{ failure() && steps.changelog.outputs.skipped == 'false' }}
        run: |
          git push -d origin "release-from-${{ github.sha }}" || echo "remote branch not found"

